\can mode verify
! Estimate work per processor for a given round robin layout and an expected ice concentration.
!Usage:
! use "path_to_ice_h_file"
! go pred_work_rr nx ny nproc

! Coarse grid

def axis/x=0.5:3600.5:$1/edges xax
def axis/y=0.5:2700.5:$2/edges yax
def grid/x=xax/y=yax cg

def axis/x=1:`(3600/$1)*(2700/$2)`:1 compax

let aice_mask = if aice_m gt 0 then 1 else aice_m
let aice_coarse= aice_mask[G=cg@SUM]/`$1 * $2`

let dummy_1d = 0*i[gi=compax]
let aice_1d = compressi(reshape(aice_coarse,dummy_1d))

let num_good=`aice_1d[i=@ngd]`

let nblocks = if `mod(num_good,$3)` eq 0 then `num_good/$3` else `int(num_good/$3)+1`

let dummy_2d=i[i=1:$3]+j[j=1:`nblocks`]

let aice_2d_comp=reshape(aice_1d[i=1:`nblocks*$3`],dummy_2d)

let work_1d=aice_2d_comp[j=@sum]

let/title="Processor number + 1" work_sorted_index=sorti(work_1d)
let/title="Processor number" PE=work_sorted_index-1
let/title="Expected thermo work nx=$1 ny=$2 nproc=$3" work_sorted=samplei(work_1d,work_sorted_index)

set win/size=1.5 1;plot/col=red/thick=2 work_sorted
set win/size=1.5 2;plot/col=red/thick=2/sym/vs pe,work_sorted
\set mode verify/last
